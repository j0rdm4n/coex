(function(factory){if(typeof exports==="object"){module.exports=factory()}else if(typeof define==="function"&&define.amd){define(factory)}else{var glob;try{glob=window}catch(e){glob=self}glob.coex=factory()}})(function(undefined){"use strict";var image,canvas,context;var Coex=function(){};Coex.prototype.destroy=function(){destroyDummyCanvas();image=null;canvas=null;context=null};Coex.prototype.getColors=function(url,callback){image=new Image;createDummyCanvas();loadImage.call(this,url,callback)};function loadImage(url,callback){var width,height,imgData,pix,i=0,length,colors=[],hexColors=[],colorString,sortedColors,colorsValues,hexVal,usedColors=[],apxColor,rgbaValues,isValid,inc=0;image.src=url;image.onload=function(){width=canvas.width=context.width=image.width;height=canvas.height=context.height=image.height;context.drawImage(image,0,0);imgData=context.getImageData(0,0,width,height);pix=imgData.data;length=pix.length;for(;i<length;i+=4){colorString=pix[i]+","+pix[i+1]+","+pix[i+2]+","+pix[i+3];if(colors[colorString]){colors[colorString]+=1}else{colors[colorString]=1}}sortedColors=sortColors(colors);for(var color in sortedColors){colorsValues=color.split(",");hexVal="";for(i=0;i<3;i+=1){hexVal+=decimalToHex(colorsValues[i])}isValid=true;for(var usedColor in usedColors){apxColor=0;rgbaValues=usedColors[usedColor].split(",");for(i=0;i<4;i+=1){apxColor+=Math.abs(colorsValues[i]-rgbaValues[i])}if(apxColor/4<30){isValid=false;break}}if(isValid){hexColors.push("#"+hexVal);usedColors.push(color);inc++}if(inc>10){break}}callback(hexColors);this.destroy()}.bind(this)}function createDummyCanvas(){destroyDummyCanvas();canvas=document.createElement("canvas");context=canvas.getContext("2d");context.width=1e3;context.height=1e3;context.clearRect(0,0,1e3,1e3)}function destroyDummyCanvas(){canvas=null;context=null}function sortColors(colors){var temp=[],key,sortedColors=[],i=0,length;for(key in colors){temp.push([key,colors[key]])}temp.sort(function(){return arguments[1][1]-arguments[0][1]});length=temp.length;for(;i<length;i+=1){sortedColors[temp[i][0]]=temp[i][1]}return sortedColors}function decimalToHex(decimal){var hex=Number(decimal).toString(16);while(hex.length<2){hex="0"+hex}return hex}return new Coex});